{"ast":null,"code":"var _jsxFileName = \"/app/game-collection/src/pages/GameList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Section = styled.div`\n  margin-bottom: 3rem;\n`;\n_c2 = Section;\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n`;\n_c3 = SectionTitle;\nconst CategoryTitle = styled.h3`\n  color: #ff8fa3;\n  font-size: 1.5rem;\n  margin: 2rem 0 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #ffd6e0;\n`;\n_c4 = CategoryTitle;\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n_c5 = GameGrid;\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c6 = GameCard;\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n_c7 = GameImage;\nconst GameContent = styled.div`\n  padding: 1rem;\n`;\n_c8 = GameContent;\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 0 0 0.5rem 0;\n  font-size: 1.2rem;\n`;\n_c9 = GameTitle;\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 0 1rem 0;\n  font-size: 0.9rem;\n`;\n_c0 = GameDescription;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n_c1 = TagContainer;\nconst Tag = styled.span`\n  padding: 0.3rem 0.8rem;\n  border-radius: 15px;\n  font-size: 0.8rem;\n  background-color: ${props => props.type === 'developer' ? '#ffd6e0' : '#e0f7ff'};\n  color: ${props => props.type === 'developer' ? '#ff6b8b' : '#4dabf7'};\n`;\n_c10 = Tag;\nconst ShowMoreButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.8rem 2rem;\n  background-color: #ff6b8b;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #ff4d6d;\n  }\n`;\n_c11 = ShowMoreButton;\nconst categoryLabels = {\n  racing: '레이싱 게임',\n  breakout: '브레이크아웃 게임',\n  reaction: '반응 속도 게임',\n  free: '자유 게임'\n};\nconst GameList = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    classNumber,\n    category\n  } = useParams();\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const handleGameClick = gameId => {\n    navigate(`/play/${gameId}`);\n  };\n  const toggleCategory = categoryKey => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryKey]: !prev[categoryKey]\n    }));\n  };\n  const renderAwardSection = () => {\n    const awardGames = games.filter(game => game.isAward);\n    const gamesByCategory = awardGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\uC218\\uC0C1\\uC791 \\uAC8C\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), Object.entries(gamesByCategory).map(([cat, games]) => {\n        const categoryKey = `awards-${cat}`;\n        const isExpanded = expandedCategories[categoryKey];\n        const displayedGames = isExpanded ? games : games.slice(0, 5);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n            children: categoryLabels[cat]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            children: displayedGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n              onClick: () => handleGameClick(game.id),\n              children: [/*#__PURE__*/_jsxDEV(GameImage, {\n                src: game.image,\n                alt: game.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n                children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n                  children: game.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n                  children: game.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    type: \"developer\",\n                    children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                    type: \"category\",\n                    children: categoryLabels[game.category]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)]\n            }, game.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), games.length > 5 && /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n            onClick: () => toggleCategory(categoryKey),\n            children: isExpanded ? '접기' : '더보기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  const renderClassSection = classNum => {\n    const classGames = games.filter(game => game.classNumber === classNum);\n    const gamesByCategory = classGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: [classNum, \"\\uBC18 \\uAC8C\\uC784\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), Object.entries(gamesByCategory).map(([cat, games]) => {\n        const categoryKey = `${classNum}-${cat}`;\n        const isExpanded = expandedCategories[categoryKey];\n        const displayedGames = isExpanded ? games : games.slice(0, 5);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n            children: categoryLabels[cat]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            children: displayedGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n              onClick: () => handleGameClick(game.id),\n              children: [/*#__PURE__*/_jsxDEV(GameImage, {\n                src: game.image,\n                alt: game.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n                children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n                  children: game.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n                  children: game.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    type: \"developer\",\n                    children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                    type: \"category\",\n                    children: categoryLabels[game.category]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, game.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), games.length > 5 && /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n            onClick: () => toggleCategory(categoryKey),\n            children: isExpanded ? '접기' : '더보기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 특정 클래스의 특정 카테고리 게임만 보여주기\n  if (classNumber && category) {\n    const filteredGames = games.filter(game => game.classNumber === classNumber && game.category === category);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: [classNumber, \" \", categoryLabels[category]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n        children: filteredGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n          onClick: () => handleGameClick(game.id),\n          children: [/*#__PURE__*/_jsxDEV(GameImage, {\n            src: game.image,\n            alt: game.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n            children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n              children: game.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n              children: game.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Tag, {\n                type: \"developer\",\n                children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                type: \"category\",\n                children: categoryLabels[game.category]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, game.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 수상작 페이지\n  if (category === 'awards') {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: renderAwardSection()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 특정 클래스의 모든 게임 보여주기\n  if (classNumber) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: renderClassSection(classNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 메인 페이지 (수상작 + 모든 클래스)\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [renderAwardSection(), renderClassSection('6-4'), renderClassSection('6-5')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(GameList, \"aCczGJZXZEuEfQ1gaH4uwxRLTow=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c12 = GameList;\nexport default GameList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"GameGrid\");\n$RefreshReg$(_c6, \"GameCard\");\n$RefreshReg$(_c7, \"GameImage\");\n$RefreshReg$(_c8, \"GameContent\");\n$RefreshReg$(_c9, \"GameTitle\");\n$RefreshReg$(_c0, \"GameDescription\");\n$RefreshReg$(_c1, \"TagContainer\");\n$RefreshReg$(_c10, \"Tag\");\n$RefreshReg$(_c11, \"ShowMoreButton\");\n$RefreshReg$(_c12, \"GameList\");","map":{"version":3,"names":["React","useState","styled","useNavigate","useParams","games","jsxDEV","_jsxDEV","Container","div","_c","Section","_c2","SectionTitle","h2","_c3","CategoryTitle","h3","_c4","GameGrid","_c5","GameCard","_c6","GameImage","img","_c7","GameContent","_c8","GameTitle","_c9","GameDescription","p","_c0","TagContainer","_c1","Tag","span","props","type","_c10","ShowMoreButton","button","_c11","categoryLabels","racing","breakout","reaction","free","GameList","_s","navigate","classNumber","category","expandedCategories","setExpandedCategories","handleGameClick","gameId","toggleCategory","categoryKey","prev","renderAwardSection","awardGames","filter","game","isAward","gamesByCategory","reduce","acc","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","cat","isExpanded","displayedGames","slice","onClick","id","src","image","alt","title","description","developer","length","renderClassSection","classNum","classGames","filteredGames","_c12","$RefreshReg$"],"sources":["/app/game-collection/src/pages/GameList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 3rem;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n`;\n\nconst CategoryTitle = styled.h3`\n  color: #ff8fa3;\n  font-size: 1.5rem;\n  margin: 2rem 0 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #ffd6e0;\n`;\n\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst GameContent = styled.div`\n  padding: 1rem;\n`;\n\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 0 0 0.5rem 0;\n  font-size: 1.2rem;\n`;\n\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 0 1rem 0;\n  font-size: 0.9rem;\n`;\n\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n\nconst Tag = styled.span<{ type: 'developer' | 'category' }>`\n  padding: 0.3rem 0.8rem;\n  border-radius: 15px;\n  font-size: 0.8rem;\n  background-color: ${props => props.type === 'developer' ? '#ffd6e0' : '#e0f7ff'};\n  color: ${props => props.type === 'developer' ? '#ff6b8b' : '#4dabf7'};\n`;\n\nconst ShowMoreButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.8rem 2rem;\n  background-color: #ff6b8b;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #ff4d6d;\n  }\n`;\n\nconst categoryLabels = {\n  racing: '레이싱 게임',\n  breakout: '브레이크아웃 게임',\n  reaction: '반응 속도 게임',\n  free: '자유 게임'\n};\n\nconst GameList: React.FC = () => {\n  const navigate = useNavigate();\n  const { classNumber, category } = useParams();\n  const [expandedCategories, setExpandedCategories] = useState<Record<string, boolean>>({});\n\n  const handleGameClick = (gameId: string) => {\n    navigate(`/play/${gameId}`);\n  };\n\n  const toggleCategory = (categoryKey: string) => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryKey]: !prev[categoryKey]\n    }));\n  };\n\n  const renderAwardSection = () => {\n    const awardGames = games.filter(game => game.isAward);\n    const gamesByCategory = awardGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {} as Record<string, typeof games>);\n\n    return (\n      <Section>\n        <SectionTitle>수상작 게임</SectionTitle>\n        {Object.entries(gamesByCategory).map(([cat, games]) => {\n          const categoryKey = `awards-${cat}`;\n          const isExpanded = expandedCategories[categoryKey];\n          const displayedGames = isExpanded ? games : games.slice(0, 5);\n\n          return (\n            <div key={cat}>\n              <CategoryTitle>{categoryLabels[cat as keyof typeof categoryLabels]}</CategoryTitle>\n              <GameGrid>\n                {displayedGames.map((game) => (\n                  <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n                    <GameImage src={game.image} alt={game.title} />\n                    <GameContent>\n                      <GameTitle>{game.title}</GameTitle>\n                      <GameDescription>{game.description}</GameDescription>\n                      <TagContainer>\n                        <Tag type=\"developer\">{game.developer} 개발자</Tag>\n                        <Tag type=\"category\">{categoryLabels[game.category]}</Tag>\n                      </TagContainer>\n                    </GameContent>\n                  </GameCard>\n                ))}\n              </GameGrid>\n              {games.length > 5 && (\n                <ShowMoreButton onClick={() => toggleCategory(categoryKey)}>\n                  {isExpanded ? '접기' : '더보기'}\n                </ShowMoreButton>\n              )}\n            </div>\n          );\n        })}\n      </Section>\n    );\n  };\n\n  const renderClassSection = (classNum: string) => {\n    const classGames = games.filter(game => game.classNumber === classNum);\n    const gamesByCategory = classGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {} as Record<string, typeof games>);\n\n    return (\n      <Section>\n        <SectionTitle>{classNum}반 게임</SectionTitle>\n        {Object.entries(gamesByCategory).map(([cat, games]) => {\n          const categoryKey = `${classNum}-${cat}`;\n          const isExpanded = expandedCategories[categoryKey];\n          const displayedGames = isExpanded ? games : games.slice(0, 5);\n\n          return (\n            <div key={cat}>\n              <CategoryTitle>{categoryLabels[cat as keyof typeof categoryLabels]}</CategoryTitle>\n              <GameGrid>\n                {displayedGames.map((game) => (\n                  <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n                    <GameImage src={game.image} alt={game.title} />\n                    <GameContent>\n                      <GameTitle>{game.title}</GameTitle>\n                      <GameDescription>{game.description}</GameDescription>\n                      <TagContainer>\n                        <Tag type=\"developer\">{game.developer} 개발자</Tag>\n                        <Tag type=\"category\">{categoryLabels[game.category]}</Tag>\n                      </TagContainer>\n                    </GameContent>\n                  </GameCard>\n                ))}\n              </GameGrid>\n              {games.length > 5 && (\n                <ShowMoreButton onClick={() => toggleCategory(categoryKey)}>\n                  {isExpanded ? '접기' : '더보기'}\n                </ShowMoreButton>\n              )}\n            </div>\n          );\n        })}\n      </Section>\n    );\n  };\n\n  // 특정 클래스의 특정 카테고리 게임만 보여주기\n  if (classNumber && category) {\n    const filteredGames = games.filter(\n      game => game.classNumber === classNumber && game.category === category\n    );\n\n    return (\n      <Container>\n        <SectionTitle>{classNumber} {categoryLabels[category as keyof typeof categoryLabels]}</SectionTitle>\n        <GameGrid>\n          {filteredGames.map((game) => (\n            <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n              <GameImage src={game.image} alt={game.title} />\n              <GameContent>\n                <GameTitle>{game.title}</GameTitle>\n                <GameDescription>{game.description}</GameDescription>\n                <TagContainer>\n                  <Tag type=\"developer\">{game.developer} 개발자</Tag>\n                  <Tag type=\"category\">{categoryLabels[game.category]}</Tag>\n                </TagContainer>\n              </GameContent>\n            </GameCard>\n          ))}\n        </GameGrid>\n      </Container>\n    );\n  }\n\n  // 수상작 페이지\n  if (category === 'awards') {\n    return (\n      <Container>\n        {renderAwardSection()}\n      </Container>\n    );\n  }\n\n  // 특정 클래스의 모든 게임 보여주기\n  if (classNumber) {\n    return (\n      <Container>\n        {renderClassSection(classNumber)}\n      </Container>\n    );\n  }\n\n  // 메인 페이지 (수상작 + 모든 클래스)\n  return (\n    <Container>\n      {renderAwardSection()}\n      {renderClassSection('6-4')}\n      {renderClassSection('6-5')}\n    </Container>\n  );\n};\n\nexport default GameList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}