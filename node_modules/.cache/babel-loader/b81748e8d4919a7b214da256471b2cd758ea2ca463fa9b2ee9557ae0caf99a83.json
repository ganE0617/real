{"ast":null,"code":"var _jsxFileName = \"/app/game-collection/src/pages/GameList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n_c2 = GameGrid;\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c3 = GameCard;\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n_c4 = GameImage;\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 1rem;\n  font-size: 1.2rem;\n`;\n_c5 = GameTitle;\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 1rem 1rem;\n  font-size: 0.9rem;\n`;\n_c6 = GameDescription;\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  margin: 2rem 0 1rem;\n  font-size: 1.8rem;\n  text-align: center;\n`;\n_c7 = SectionTitle;\nconst GameList = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    classNumber,\n    category\n  } = useParams();\n  const handleGameClick = gameId => {\n    navigate(`/play/${gameId}`);\n  };\n  const getFilteredGames = () => {\n    if (classNumber && category) {\n      return games.filter(game => game.classNumber === classNumber && game.category === category);\n    } else if (classNumber) {\n      return games.filter(game => game.classNumber === classNumber);\n    } else if (category === 'awards') {\n      return games.filter(game => game.isAward);\n    }\n    return games;\n  };\n  const filteredGames = getFilteredGames();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: classNumber && category ? `${classNumber} ${category} 게임` : classNumber ? `${classNumber} 게임` : category === 'awards' ? '수상작 게임' : '전체 게임'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n      children: filteredGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        onClick: () => handleGameClick(game.id),\n        children: [/*#__PURE__*/_jsxDEV(GameImage, {\n          src: game.image,\n          alt: game.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameTitle, {\n          children: game.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n          children: game.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(GameList, \"bqWkT0HGa7CY5ZmstcwH+teqJlg=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c8 = GameList;\nexport default GameList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"GameGrid\");\n$RefreshReg$(_c3, \"GameCard\");\n$RefreshReg$(_c4, \"GameImage\");\n$RefreshReg$(_c5, \"GameTitle\");\n$RefreshReg$(_c6, \"GameDescription\");\n$RefreshReg$(_c7, \"SectionTitle\");\n$RefreshReg$(_c8, \"GameList\");","map":{"version":3,"names":["React","styled","useNavigate","useParams","games","jsxDEV","_jsxDEV","Container","div","_c","GameGrid","_c2","GameCard","_c3","GameImage","img","_c4","GameTitle","h3","_c5","GameDescription","p","_c6","SectionTitle","h2","_c7","GameList","_s","navigate","classNumber","category","handleGameClick","gameId","getFilteredGames","filter","game","isAward","filteredGames","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","src","image","alt","title","description","_c8","$RefreshReg$"],"sources":["/app/game-collection/src/pages/GameList.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 1rem;\n  font-size: 1.2rem;\n`;\n\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 1rem 1rem;\n  font-size: 0.9rem;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  margin: 2rem 0 1rem;\n  font-size: 1.8rem;\n  text-align: center;\n`;\n\nconst GameList: React.FC = () => {\n  const navigate = useNavigate();\n  const { classNumber, category } = useParams();\n\n  const handleGameClick = (gameId: string) => {\n    navigate(`/play/${gameId}`);\n  };\n\n  const getFilteredGames = () => {\n    if (classNumber && category) {\n      return games.filter(game => \n        game.classNumber === classNumber && \n        game.category === category\n      );\n    } else if (classNumber) {\n      return games.filter(game => game.classNumber === classNumber);\n    } else if (category === 'awards') {\n      return games.filter(game => game.isAward);\n    }\n    return games;\n  };\n\n  const filteredGames = getFilteredGames();\n\n  return (\n    <Container>\n      <SectionTitle>\n        {classNumber && category ? `${classNumber} ${category} 게임` :\n         classNumber ? `${classNumber} 게임` :\n         category === 'awards' ? '수상작 게임' :\n         '전체 게임'}\n      </SectionTitle>\n      <GameGrid>\n        {filteredGames.map((game) => (\n          <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n            <GameImage src={game.image} alt={game.title} />\n            <GameTitle>{game.title}</GameTitle>\n            <GameDescription>{game.description}</GameDescription>\n          </GameCard>\n        ))}\n      </GameGrid>\n    </Container>\n  );\n};\n\nexport default GameList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}