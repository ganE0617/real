{"ast":null,"code":"var _jsxFileName = \"/app/game-collection/src/pages/GameList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Section = styled.div`\n  margin-bottom: 3rem;\n`;\n_c2 = Section;\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n`;\n_c3 = SectionTitle;\nconst CategoryTitle = styled.h3`\n  color: #ff8fa3;\n  font-size: 1.5rem;\n  margin: 2rem 0 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #ffd6e0;\n`;\n_c4 = CategoryTitle;\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n_c5 = GameGrid;\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c6 = GameCard;\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n_c7 = GameImage;\nconst GameContent = styled.div`\n  padding: 1rem;\n`;\n_c8 = GameContent;\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 0 0 0.5rem 0;\n  font-size: 1.2rem;\n`;\n_c9 = GameTitle;\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 0 1rem 0;\n  font-size: 0.9rem;\n`;\n_c0 = GameDescription;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n_c1 = TagContainer;\nconst Tag = styled.span`\n  background-color: #ffd6e0;\n  color: #ff6b8b;\n  padding: 0.3rem 0.8rem;\n  border-radius: 15px;\n  font-size: 0.8rem;\n`;\n_c10 = Tag;\nconst ShowMoreButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.8rem 2rem;\n  background-color: #ff6b8b;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #ff4d6d;\n  }\n`;\n_c11 = ShowMoreButton;\nconst categoryLabels = {\n  racing: '레이싱 게임',\n  breakout: '브레이크아웃 게임',\n  reaction: '반응 속도 게임',\n  free: '자유 게임'\n};\nconst GameList = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    classNumber,\n    category\n  } = useParams();\n  const [expandedCategories, setExpandedCategories] = useState({});\n  const handleGameClick = gameId => {\n    navigate(`/play/${gameId}`);\n  };\n  const toggleCategory = categoryKey => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryKey]: !prev[categoryKey]\n    }));\n  };\n  const getFilteredGames = () => {\n    if (classNumber && category) {\n      return games.filter(game => game.classNumber === classNumber && game.category === category);\n    } else if (classNumber) {\n      return games.filter(game => game.classNumber === classNumber);\n    } else if (category === 'awards') {\n      return games.filter(game => game.isAward);\n    }\n    return games;\n  };\n  const renderClassSection = classNum => {\n    const classGames = games.filter(game => game.classNumber === classNum);\n    const gamesByCategory = classGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: [classNum, \"\\uBC18 \\uAC8C\\uC784\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), Object.entries(gamesByCategory).map(([cat, games]) => {\n        const categoryKey = `${classNum}-${cat}`;\n        const isExpanded = expandedCategories[categoryKey];\n        const displayedGames = isExpanded ? games : games.slice(0, 5);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n            children: categoryLabels[cat]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            children: displayedGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n              onClick: () => handleGameClick(game.id),\n              children: [/*#__PURE__*/_jsxDEV(GameImage, {\n                src: game.image,\n                alt: game.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n                children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n                  children: game.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n                  children: game.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                    children: categoryLabels[game.category]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)]\n            }, game.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), games.length > 5 && /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n            onClick: () => toggleCategory(categoryKey),\n            children: isExpanded ? '접기' : '더보기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  const filteredGames = getFilteredGames();\n  if (classNumber && category) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: [classNumber, \" \", categoryLabels[category]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n        children: filteredGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n          onClick: () => handleGameClick(game.id),\n          children: [/*#__PURE__*/_jsxDEV(GameImage, {\n            src: game.image,\n            alt: game.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n            children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n              children: game.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n              children: game.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Tag, {\n                children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                children: categoryLabels[game.category]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, game.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  if (category === 'awards') {\n    const awardGames = games.filter(game => game.isAward);\n    const gamesByCategory = awardGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"\\uC218\\uC0C1\\uC791 \\uAC8C\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), Object.entries(gamesByCategory).map(([cat, games]) => {\n          const categoryKey = `awards-${cat}`;\n          const isExpanded = expandedCategories[categoryKey];\n          const displayedGames = isExpanded ? games : games.slice(0, 5);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n              children: categoryLabels[cat]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n              children: displayedGames.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n                onClick: () => handleGameClick(game.id),\n                children: [/*#__PURE__*/_jsxDEV(GameImage, {\n                  src: game.image,\n                  alt: game.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n                  children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n                    children: game.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(GameDescription, {\n                    children: game.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TagContainer, {\n                    children: [/*#__PURE__*/_jsxDEV(Tag, {\n                      children: [game.developer, \" \\uAC1C\\uBC1C\\uC790\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                      children: categoryLabels[game.category]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)]\n              }, game.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), games.length > 5 && /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n              onClick: () => toggleCategory(categoryKey),\n              children: isExpanded ? '접기' : '더보기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, cat, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), renderClassSection('6-4'), renderClassSection('6-5')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [renderClassSection('6-4'), renderClassSection('6-5')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(GameList, \"aCczGJZXZEuEfQ1gaH4uwxRLTow=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c12 = GameList;\nexport default GameList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"GameGrid\");\n$RefreshReg$(_c6, \"GameCard\");\n$RefreshReg$(_c7, \"GameImage\");\n$RefreshReg$(_c8, \"GameContent\");\n$RefreshReg$(_c9, \"GameTitle\");\n$RefreshReg$(_c0, \"GameDescription\");\n$RefreshReg$(_c1, \"TagContainer\");\n$RefreshReg$(_c10, \"Tag\");\n$RefreshReg$(_c11, \"ShowMoreButton\");\n$RefreshReg$(_c12, \"GameList\");","map":{"version":3,"names":["React","useState","styled","useNavigate","useParams","games","jsxDEV","_jsxDEV","Container","div","_c","Section","_c2","SectionTitle","h2","_c3","CategoryTitle","h3","_c4","GameGrid","_c5","GameCard","_c6","GameImage","img","_c7","GameContent","_c8","GameTitle","_c9","GameDescription","p","_c0","TagContainer","_c1","Tag","span","_c10","ShowMoreButton","button","_c11","categoryLabels","racing","breakout","reaction","free","GameList","_s","navigate","classNumber","category","expandedCategories","setExpandedCategories","handleGameClick","gameId","toggleCategory","categoryKey","prev","getFilteredGames","filter","game","isAward","renderClassSection","classNum","classGames","gamesByCategory","reduce","acc","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","cat","isExpanded","displayedGames","slice","onClick","id","src","image","alt","title","description","developer","length","filteredGames","awardGames","_c12","$RefreshReg$"],"sources":["/app/game-collection/src/pages/GameList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { games } from '../data/games';\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 3rem;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ff6b8b;\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n`;\n\nconst CategoryTitle = styled.h3`\n  color: #ff8fa3;\n  font-size: 1.5rem;\n  margin: 2rem 0 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #ffd6e0;\n`;\n\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 2rem;\n  padding: 1rem;\n`;\n\nconst GameCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst GameImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst GameContent = styled.div`\n  padding: 1rem;\n`;\n\nconst GameTitle = styled.h3`\n  color: #ff6b8b;\n  margin: 0 0 0.5rem 0;\n  font-size: 1.2rem;\n`;\n\nconst GameDescription = styled.p`\n  color: #666;\n  margin: 0 0 1rem 0;\n  font-size: 0.9rem;\n`;\n\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n\nconst Tag = styled.span`\n  background-color: #ffd6e0;\n  color: #ff6b8b;\n  padding: 0.3rem 0.8rem;\n  border-radius: 15px;\n  font-size: 0.8rem;\n`;\n\nconst ShowMoreButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.8rem 2rem;\n  background-color: #ff6b8b;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #ff4d6d;\n  }\n`;\n\nconst categoryLabels = {\n  racing: '레이싱 게임',\n  breakout: '브레이크아웃 게임',\n  reaction: '반응 속도 게임',\n  free: '자유 게임'\n};\n\nconst GameList: React.FC = () => {\n  const navigate = useNavigate();\n  const { classNumber, category } = useParams();\n  const [expandedCategories, setExpandedCategories] = useState<Record<string, boolean>>({});\n\n  const handleGameClick = (gameId: string) => {\n    navigate(`/play/${gameId}`);\n  };\n\n  const toggleCategory = (categoryKey: string) => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryKey]: !prev[categoryKey]\n    }));\n  };\n\n  const getFilteredGames = () => {\n    if (classNumber && category) {\n      return games.filter(game => \n        game.classNumber === classNumber && \n        game.category === category\n      );\n    } else if (classNumber) {\n      return games.filter(game => game.classNumber === classNumber);\n    } else if (category === 'awards') {\n      return games.filter(game => game.isAward);\n    }\n    return games;\n  };\n\n  const renderClassSection = (classNum: string) => {\n    const classGames = games.filter(game => game.classNumber === classNum);\n    const gamesByCategory = classGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {} as Record<string, typeof games>);\n\n    return (\n      <Section>\n        <SectionTitle>{classNum}반 게임</SectionTitle>\n        {Object.entries(gamesByCategory).map(([cat, games]) => {\n          const categoryKey = `${classNum}-${cat}`;\n          const isExpanded = expandedCategories[categoryKey];\n          const displayedGames = isExpanded ? games : games.slice(0, 5);\n\n          return (\n            <div key={cat}>\n              <CategoryTitle>{categoryLabels[cat as keyof typeof categoryLabels]}</CategoryTitle>\n              <GameGrid>\n                {displayedGames.map((game) => (\n                  <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n                    <GameImage src={game.image} alt={game.title} />\n                    <GameContent>\n                      <GameTitle>{game.title}</GameTitle>\n                      <GameDescription>{game.description}</GameDescription>\n                      <TagContainer>\n                        <Tag>{game.developer} 개발자</Tag>\n                        <Tag>{categoryLabels[game.category]}</Tag>\n                      </TagContainer>\n                    </GameContent>\n                  </GameCard>\n                ))}\n              </GameGrid>\n              {games.length > 5 && (\n                <ShowMoreButton onClick={() => toggleCategory(categoryKey)}>\n                  {isExpanded ? '접기' : '더보기'}\n                </ShowMoreButton>\n              )}\n            </div>\n          );\n        })}\n      </Section>\n    );\n  };\n\n  const filteredGames = getFilteredGames();\n\n  if (classNumber && category) {\n    return (\n      <Container>\n        <SectionTitle>{classNumber} {categoryLabels[category as keyof typeof categoryLabels]}</SectionTitle>\n        <GameGrid>\n          {filteredGames.map((game) => (\n            <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n              <GameImage src={game.image} alt={game.title} />\n              <GameContent>\n                <GameTitle>{game.title}</GameTitle>\n                <GameDescription>{game.description}</GameDescription>\n                <TagContainer>\n                  <Tag>{game.developer} 개발자</Tag>\n                  <Tag>{categoryLabels[game.category]}</Tag>\n                </TagContainer>\n              </GameContent>\n            </GameCard>\n          ))}\n        </GameGrid>\n      </Container>\n    );\n  }\n\n  if (category === 'awards') {\n    const awardGames = games.filter(game => game.isAward);\n    const gamesByCategory = awardGames.reduce((acc, game) => {\n      if (!acc[game.category]) {\n        acc[game.category] = [];\n      }\n      acc[game.category].push(game);\n      return acc;\n    }, {} as Record<string, typeof games>);\n\n    return (\n      <Container>\n        <Section>\n          <SectionTitle>수상작 게임</SectionTitle>\n          {Object.entries(gamesByCategory).map(([cat, games]) => {\n            const categoryKey = `awards-${cat}`;\n            const isExpanded = expandedCategories[categoryKey];\n            const displayedGames = isExpanded ? games : games.slice(0, 5);\n\n            return (\n              <div key={cat}>\n                <CategoryTitle>{categoryLabels[cat as keyof typeof categoryLabels]}</CategoryTitle>\n                <GameGrid>\n                  {displayedGames.map((game) => (\n                    <GameCard key={game.id} onClick={() => handleGameClick(game.id)}>\n                      <GameImage src={game.image} alt={game.title} />\n                      <GameContent>\n                        <GameTitle>{game.title}</GameTitle>\n                        <GameDescription>{game.description}</GameDescription>\n                        <TagContainer>\n                          <Tag>{game.developer} 개발자</Tag>\n                          <Tag>{categoryLabels[game.category]}</Tag>\n                        </TagContainer>\n                      </GameContent>\n                    </GameCard>\n                  ))}\n                </GameGrid>\n                {games.length > 5 && (\n                  <ShowMoreButton onClick={() => toggleCategory(categoryKey)}>\n                    {isExpanded ? '접기' : '더보기'}\n                  </ShowMoreButton>\n                )}\n              </div>\n            );\n          })}\n        </Section>\n        {renderClassSection('6-4')}\n        {renderClassSection('6-5')}\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      {renderClassSection('6-4')}\n      {renderClassSection('6-5')}\n    </Container>\n  );\n};\n\nexport default GameList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}